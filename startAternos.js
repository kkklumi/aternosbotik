const puppeteer = require('puppeteer');

module.exports = async function startAternos() {
  const browser = await puppeteer.launch({
    headless: true,
    args: ['--no-sandbox', '--disable-setuid-sandbox']
  });
  const page = await browser.newPage();

  try {
    console.log('üîë –ó–∞—Ö–æ–¥–∏–º –Ω–∞ aternos.org...');
    console.log('‚úÖ –ê–≤—Ç–æ—Ä–∏–∑—É–µ–º—Å—è...');
    console.log('‚û°Ô∏è –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å–µ—Ä–≤–µ—Ä...');
    console.log('üöÄ –ù–∞–∂–∏–º–∞–µ–º —Å—Ç–∞—Ä—Ç...');
    await page.goto('https://aternos.org/login/', { waitUntil: 'networkidle2' });
    await page.type('#user', process.env.ATERNOS_EMAIL);
    await page.type('#password', process.env.ATERNOS_PASSWORD);
    await Promise.all([
      page.click('#login'),
      page.waitForNavigation({ waitUntil: 'networkidle2' })
    ]);

    if (!page.url().includes('/server/')) {
      throw new Error('–û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞ –≤ Aternos. –ü—Ä–æ–≤–µ—Ä—å –ª–æ–≥–∏–Ω –∏ –ø–∞—Ä–æ–ª—å.');
    }

    await page.goto('https://aternos.org/server/');
    await page.waitForSelector('.server-status.online, .server-status.offline', { timeout: 10000 });

    const isOnline = await page.$('.server-status.online');
    if (isOnline) {
      await browser.close();
      return '‚úÖ –°–µ—Ä–≤–µ—Ä —É–∂–µ –∑–∞–ø—É—â–µ–Ω!';
    }

    const startButton = await page.$('button.btn.btn-success.btn-xs');
    if (!startButton) throw new Error('–ö–Ω–æ–ø–∫–∞ –∑–∞–ø—É—Å–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.');

    await startButton.click();
    await browser.close();
    return '‚úÖ –ó–∞–ø—Ä–æ—Å –Ω–∞ –∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!';
  } catch (err) {
    await browser.close();
    throw err;
  }
};
